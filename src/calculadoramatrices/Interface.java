package calculadoramatrices;

import javax.swing.JOptionPane;
import java.util.Arrays;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author Sebastian Sanchez
 */
public class Interface extends javax.swing.JFrame {
        int tamaño;
    /**
     * Creates new form Interface
     */
    public Interface() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        matrizSuma = new javax.swing.JButton();
        matrizResta = new javax.swing.JButton();
        matrizTraza = new javax.swing.JButton();
        matrizDeterminantes = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(0, 153, 153));
        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("BIENVENIDO A TU CALCULADORA DE MATRICES");

        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("¡Comencemos!");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(119, 119, 119)
                        .addComponent(jLabel2))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(220, 220, 220)
                        .addComponent(jLabel3)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addComponent(jLabel3)
                .addContainerGap(28, Short.MAX_VALUE))
        );

        jPanel2.setBackground(new java.awt.Color(0, 204, 0));
        jPanel2.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        matrizSuma.setText("Matriz de Suma");
        matrizSuma.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizSumaActionPerformed(evt);
            }
        });

        matrizResta.setText("Matriz de Resta");
        matrizResta.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizRestaActionPerformed(evt);
            }
        });

        matrizTraza.setText("Matriz de Traza");
        matrizTraza.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizTrazaActionPerformed(evt);
            }
        });

        matrizDeterminantes.setText("Matriz de Determinantes");
        matrizDeterminantes.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                matrizDeterminantesActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(0, 46, Short.MAX_VALUE)
                .addComponent(matrizDeterminantes)
                .addGap(39, 39, 39))
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(67, 67, 67)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(matrizResta)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(matrizSuma)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(matrizTraza)
                            .addGap(1, 1, 1))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addComponent(matrizSuma)
                .addGap(26, 26, 26)
                .addComponent(matrizResta)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 26, Short.MAX_VALUE)
                .addComponent(matrizTraza)
                .addGap(18, 18, 18)
                .addComponent(matrizDeterminantes)
                .addGap(26, 26, 26))
        );

        jLabel1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/imagen/matrices.png"))); // NOI18N
        jLabel1.setText("jLabel1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 262, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(22, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(37, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void matrizSumaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizSumaActionPerformed
        tamaño = Integer.parseInt(JOptionPane.showInputDialog("¿Cual será el tamaño de tus matrices"));
        int matriz1[][] = new int[tamaño][tamaño];
        int matriz2[][] = new int[tamaño][tamaño];
        int matriz3[][] = new int[tamaño][tamaño];
        if (tamaño > 1) {
            JOptionPane.showMessageDialog(null, "Vamos a llenar las matrices");

            JOptionPane.showMessageDialog(null, "Ten llena tu Matriz 1");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {

                    matriz1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("¿Que numero ponemos en: fila:  " + (i + 1) + "Columna:  " + (j + 1)));
                }
            }

            JOptionPane.showMessageDialog(null, "Ten llena tu Matriz 2");
            for (int i = 0; i < matriz2.length; i++) {
                for (int j = 0; j < matriz2.length; j++) {

                    matriz2[i][j] = Integer.parseInt(JOptionPane.showInputDialog("¿Que numero ponemos en: fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }

            
            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    matriz3[i][j] = matriz1[i][j] + matriz2[i][j];
                }
            }

            JOptionPane.showMessageDialog(null, "Sumando tus matrices, tenemos la matriz:");
            String suma = "";

            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    suma += matriz3[i][j];
                    suma += " ";

                }
                suma+= "\n";
            }
            JOptionPane.showMessageDialog(null, suma);
        }
// TODO add your handling code here:
    }//GEN-LAST:event_matrizSumaActionPerformed

    private void matrizRestaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizRestaActionPerformed
        tamaño = Integer.parseInt(JOptionPane.showInputDialog("¿Cual será el tamaño de tus matrices?"));
        int matriz1[][] = new int[tamaño][tamaño];
        int matriz2[][] = new int[tamaño][tamaño];
        int matriz3[][] = new int[tamaño][tamaño];
        if (tamaño > 1) {
            JOptionPane.showMessageDialog(null, "Vamos a llenar las matrices");

            JOptionPane.showMessageDialog(null, "Ten llena tu Matriz 1");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {

                    matriz1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("¿Que número ponemos  en fila:  " + (i + 1) + "Columna:  " + (j + 1)));
                }
            }

            JOptionPane.showMessageDialog(null, "Ten llena tu Matriz 2");
            for (int i = 0; i < matriz2.length; i++) {
                for (int j = 0; j < matriz2.length; j++) {

                    matriz2[i][j] = Integer.parseInt(JOptionPane.showInputDialog("¿Que número ponemos  en fila: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }

            
            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    matriz3[i][j] = matriz1[i][j] - matriz2[i][j];
                }
            }

            JOptionPane.showMessageDialog(null, "Restando tus matrices, tenemos la matriz:");
            String resta = "";

            for (int i = 0; i < matriz3.length; i++) {
                for (int j = 0; j < matriz3.length; j++) {
                    resta += matriz3[i][j];
                    resta += " ";

                }
                resta+= "\n";
            }
            JOptionPane.showMessageDialog(null, resta);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_matrizRestaActionPerformed

    private void matrizTrazaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizTrazaActionPerformed
     tamaño = Integer.parseInt(JOptionPane.showInputDialog("¿Cual será el tamaño de tus matrices?"));
        int matriz1[][] = new int[tamaño][tamaño];
        int matriz2[][] = new int[tamaño][tamaño];
        
        if (tamaño > 1) {
            JOptionPane.showMessageDialog(null, "Vamos a llenar las matrices");

            JOptionPane.showMessageDialog(null, "Ten llena tu Matriz");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {

                    matriz1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("¿Que número ponemos  en fila:  " + (i + 1) + "Columna:  " + (j + 1)));
                }
            }
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {
                    if (i == j) {
                        matriz2[i][j] = matriz1[i][j];
                    }
                }
            }

            JOptionPane.showMessageDialog(null, "Si trazamos tu matriz, obtendremos::");
            String traza = " ";

            for (int i = 0; i < matriz2.length; i++) {
                for (int j = 0; j < matriz2.length; j++) {
                    if (i == j) {
                        traza += matriz2[i][j];
                        
                    }
                }
                traza+= "+";
            }
            JOptionPane.showMessageDialog(null, "La Traza es:" + traza);
            }
        // TODO add your handling code here:
    }//GEN-LAST:event_matrizTrazaActionPerformed

    private void matrizDeterminantesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_matrizDeterminantesActionPerformed
      tamaño = Integer.parseInt(JOptionPane.showInputDialog("¿Cual será el tamaño de tu matriz?"));

        int matriz1[][] = new int[tamaño][tamaño];
        int determinanteA = 0, determinanteB = 0, determinanteC = 0, determinanteD = 0, resul = 0;
   
        if (tamaño == 2) {
            JOptionPane.showMessageDialog(null, "Ten Llena tu matriz");
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {

                    matriz1[i][j] = Integer.parseInt(JOptionPane.showInputDialog("¿Que numero ponemos en: " + (i + 1) + "Columna: " + (j + 1)));
                }
            }
            for (int i = 0; i < matriz1.length; i++) {
                for (int j = 0; j < matriz1.length; j++) {
                    if (i == 0 && j== 0) {
                        determinanteA += matriz1[i][j];
                    }else if ( i == 0 && j == 1){
                        determinanteC += matriz1[i][j];
                    }else if ( i == 1 && j == 0){
                        determinanteD += matriz1[i][j];
                    }else if ( i == 1 && j == 1){
                        determinanteB += matriz1[i][j];
                    }
                }
            }

            JOptionPane.showMessageDialog(null, "El resultado es: = "+determinanteA+"\t"+determinanteB+"-\t"+determinanteC+"\t"+determinanteD);
            resul = (determinanteA*determinanteB)-(determinanteC*determinanteD);
            JOptionPane.showMessageDialog(null, resul);
        }
        // TODO add your handling code here:
    }//GEN-LAST:event_matrizDeterminantesActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Interface.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Interface().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JButton matrizDeterminantes;
    private javax.swing.JButton matrizResta;
    private javax.swing.JButton matrizSuma;
    private javax.swing.JButton matrizTraza;
    // End of variables declaration//GEN-END:variables
}
